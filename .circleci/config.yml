# Couldn't automatically generate a config from your source code.
# This is a generic template to serve as a base for your custom config

# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  # test:
  #   # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
  #   docker:
  #     # Specify the version you desire here
  #     # See: https://circleci.com/developer/images/image/cimg/base
  #     - image: cimg/base:current

  #   # Add steps to the job
  #   # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
  #   steps:
  #     # Checkout the code as the first step.
  #     - checkout
  #     # Replace this with a real test runner invocation
  #     - run:
  #         name: Run tests
  #         command: echo 'replace me with real tests!' && false

  build:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      # - run:
      #     name: Run tests
      #     command: |
      #       docker-compose -f ./docker-compose.development.yml up
      - run:
          name: Build Docker image
          command: |
            exit 1
            docker build --tag freshrss/freshrss:newest -f Docker/Dockerfile-Newest .
      # - run:
      #     name: Push application Docker image
      #     command: |
      #       TAG=0.1.$CIRCLE_BUILD_NUM
      #       echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
      #       docker push $DOCKERHUB_USERNAME/circleci-new-docker-example:$TAG

# docker build --pull --tag freshrss/freshrss:newest -f Docker/Dockerfile-Newest .

# Replace this with steps to build a package, or executable
# - run:
#     name: Build an artifact
#     command: touch example.txt
# - store_artifacts:
#     path: example.txt

# deploy:
#   docker:
#     - image: cimg/base:current
#   steps:
#     # Replace this with steps to deploy to users
#     - run:
#         name: deploy
#         command: "#e.g. ./deploy.sh"

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  example:
    jobs:
      - build
